/// <reference types="node" />
import type { ServiceDefinition, VirtualObjectDefinition, WorkflowDefinition } from "@restatedev/restate-sdk-core";
import type { Component } from "../types/components.js";
import type * as discovery from "../types/discovery.js";
import { type Logger } from "../logger.js";
export declare class EndpointBuilder {
    private readonly services;
    logger: Logger;
    /**
     * This is a simple console without contextual info.
     *
     * This should be used only in cases where no contextual info is available.
     */
    rlog: Console;
    private _keySet;
    get keySet(): string[];
    componentByName(componentName: string): Component | undefined;
    addComponent(component: Component): void;
    bind<P extends string, M>(definition: ServiceDefinition<P, M> | VirtualObjectDefinition<P, M> | WorkflowDefinition<P, M>): this;
    withIdentityV1(...keys: string[]): this;
    setLogger(newLogger: Logger): this;
    computeDiscovery(protocolMode: discovery.ProtocolMode): discovery.Endpoint;
    private bindServiceComponent;
    private bindVirtualObjectComponent;
    private bindWorkflowObjectComponent;
}
//# sourceMappingURL=endpoint_builder.d.ts.map