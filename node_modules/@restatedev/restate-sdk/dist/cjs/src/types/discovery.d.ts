export declare enum ProtocolMode {
    BIDI_STREAM = "BIDI_STREAM",
    REQUEST_RESPONSE = "REQUEST_RESPONSE"
}
export declare enum ServiceType {
    VIRTUAL_OBJECT = "VIRTUAL_OBJECT",
    SERVICE = "SERVICE",
    WORKFLOW = "WORKFLOW"
}
export declare enum ServiceHandlerType {
    WORKFLOW = "WORKFLOW",
    EXCLUSIVE = "EXCLUSIVE",
    SHARED = "SHARED"
}
type InputPayload = {
    required: boolean;
    contentType: string;
    jsonSchema?: any;
};
type OutputPayload = {
    contentType: string;
    setContentTypeIfEmpty: boolean;
    jsonSchema?: any;
};
export interface Handler {
    name: string;
    ty?: ServiceHandlerType;
    input?: InputPayload;
    output?: OutputPayload;
}
export interface Service {
    name: string;
    ty: ServiceType;
    handlers: Handler[];
}
export interface Endpoint {
    protocolMode: ProtocolMode;
    minProtocolVersion: number;
    maxProtocolVersion: number;
    services: Service[];
}
export {};
//# sourceMappingURL=discovery.d.ts.map