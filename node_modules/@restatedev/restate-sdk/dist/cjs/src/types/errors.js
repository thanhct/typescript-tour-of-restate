"use strict";
/*
 * Copyright (c) 2023-2024 - Restate Software, Inc., Restate GmbH
 *
 * This file is part of the Restate SDK for Node.js/TypeScript,
 * which is released under the MIT license.
 *
 * You can find a copy of the license in file LICENSE in the root
 * directory of this repository or package, or at
 * https://github.com/restatedev/sdk-typescript/blob/main/LICENSE
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeoutError = exports.TerminalError = exports.RestateError = exports.ensureError = exports.SUSPENDED_ERROR_CODE = exports.UNKNOWN_ERROR_CODE = exports.TIMEOUT_ERROR_CODE = exports.INTERNAL_ERROR_CODE = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
exports.INTERNAL_ERROR_CODE = 500;
exports.TIMEOUT_ERROR_CODE = 408;
exports.UNKNOWN_ERROR_CODE = 500;
// From shared core!
exports.SUSPENDED_ERROR_CODE = 599;
function ensureError(e) {
    if (e instanceof Error) {
        return e;
    }
    if (typeof e === "object" && e !== null && "code" in e && "message" in e) {
        // This is an error from the VM
        return new RestateError(e.message, {
            errorCode: e.code,
        });
    }
    let msg;
    try {
        msg = JSON.stringify(e);
    }
    catch (x) {
        msg = "(no JSON representation)";
    }
    return new Error("Non-Error value: " + msg);
}
exports.ensureError = ensureError;
class RestateError extends Error {
    code;
    constructor(message, options) {
        super(message, { cause: options?.cause });
        this.code = options?.errorCode ?? exports.INTERNAL_ERROR_CODE;
    }
}
exports.RestateError = RestateError;
// Does not lead to Restate retries
// Leads to an output message with a failure defined
class TerminalError extends RestateError {
    constructor(message, options) {
        super(message, options);
    }
}
exports.TerminalError = TerminalError;
class TimeoutError extends TerminalError {
    constructor() {
        super("Timeout occurred", { errorCode: exports.TIMEOUT_ERROR_CODE });
    }
}
exports.TimeoutError = TimeoutError;
//# sourceMappingURL=errors.js.map