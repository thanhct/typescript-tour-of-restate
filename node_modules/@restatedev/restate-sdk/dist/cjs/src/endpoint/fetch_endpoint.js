"use strict";
/*
 * Copyright (c) 2023-2024 - Restate Software, Inc., Restate GmbH
 *
 * This file is part of the Restate SDK for Node.js/TypeScript,
 * which is released under the MIT license.
 *
 * You can find a copy of the license in file LICENSE in the root
 * directory of this repository or package, or at
 * https://github.com/restatedev/sdk-typescript/blob/main/LICENSE
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FetchEndpointImpl = void 0;
const endpoint_builder_js_1 = require("./endpoint_builder.js");
const generic_js_1 = require("./handlers/generic.js");
const fetch_js_1 = require("./handlers/fetch.js");
const discovery_js_1 = require("../types/discovery.js");
class FetchEndpointImpl {
    protocolMode;
    constructor(protocolMode) {
        this.protocolMode = protocolMode;
    }
    builder = new endpoint_builder_js_1.EndpointBuilder();
    get keySet() {
        return this.builder.keySet;
    }
    componentByName(componentName) {
        return this.builder.componentByName(componentName);
    }
    addComponent(component) {
        this.builder.addComponent(component);
    }
    bindBundle(services) {
        services.registerServices(this);
        return this;
    }
    bind(definition) {
        this.builder.bind(definition);
        return this;
    }
    withIdentityV1(...keys) {
        this.builder.withIdentityV1(...keys);
        return this;
    }
    setLogger(newLogger) {
        this.builder.setLogger(newLogger);
        return this;
    }
    bidirectional(set = true) {
        this.protocolMode = set
            ? discovery_js_1.ProtocolMode.BIDI_STREAM
            : discovery_js_1.ProtocolMode.REQUEST_RESPONSE;
        return this;
    }
    handler() {
        const genericHandler = new generic_js_1.GenericHandler(this.builder, this.protocolMode);
        return (0, fetch_js_1.fetcher)(genericHandler);
    }
}
exports.FetchEndpointImpl = FetchEndpointImpl;
//# sourceMappingURL=fetch_endpoint.js.map